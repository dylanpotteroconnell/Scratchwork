library(tidyverse)
library(jsonlite)
require(lubridate)

allsets <- fromJSON("AllSets.json")

(setTypes <- unique(unlist(map(allsets, function(set) set$type))))

# Only include sets that add standard legal cards, for now
newStandardSets <- c("core", "expansion")

## For later
#fullReleases <- c("core", "expansion", "masters", "starter", 
#  "draft_innovation", "commander")

all_cards <- bind_rows(map(allsets, function(set) {
  if (set$type %in% newStandardSets & 
      !set$code %in% c("FBB","SUM") ){
    # For diagnostic
    #   print(set$name)
    cards <- as_tibble(set[["cards"]])
    # Legalities and prices are stored as data frames within a single column
    # Append them to the side of the new tibble
    cards.tibble <- bind_cols(as_tibble(cards[,unlist(map(map(cards, class), function(x) ! x %in% c("list", "data.frame")))]), 
                              as_tibble(cards$legalities),
                              as_tibble(cards$prices[[1]]))
    if(! "standard" %in% names(cards.tibble)){print(set$code)
      print(set$name)
      print(set$code)}    
    cards.tibble %>% 
    # Rename the added price-date columns
      rename_all(str_replace_all, 
                 pattern="([0-9]{4}-[0-9]{2}-[0-9]{2})", 
                 replacement="price_on_\\1") %>%
      # Rename the format legalities columns
      rename_at(vars(one_of(c("commander", "duel", "legacy", "modern", "vintage", "penny", "pauper", "frontier", "future", "standard"))),
                funs(paste0("legal_in_", .))) %>%
      # Remove any stars from card numbers
      mutate(number = as.numeric(str_replace_all(number, "[^0-9]", ""))) %>%
      # Include relevant set data with each card 
      mutate(set_code=set$code, 
             release_date=ymd(set$releaseDate),
             block=set$block,
             set_name=set$name)
  }
}))

all_cards <- all_cards %>%
  select(name, set_name, set_code, release_date, everything()) %>%
  mutate_at(vars(contains("legal_in")), funs(ifelse(is.na(.), "Not Legal", .)))

